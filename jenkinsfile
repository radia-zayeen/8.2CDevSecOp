pipeline {
    agent any

    environment {
        RECIPIENT_EMAIL = 'radia.zayeen@gmail.com'
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                git branch: 'main', url: 'https://github.com/radia-zayeen/8.2CDevSecOp.git'
            }
        }

        stage('Build') {
            steps {
                echo 'Building the application...'
                sh 'npm install'
            }
        }

        stage('Test') {
            steps {
                script {
                    echo 'Running tests...'
                    def testStatus = sh(script: 'npm test > test-results.log 2>&1', returnStatus: true)
                    if (testStatus == 0) {
                        currentBuild.result = 'SUCCESS'
                    } else {
                        currentBuild.result = 'UNSTABLE' // Mark build as unstable if tests fail
                    }
                }
            }
            post {
                always {
                    emailext(
                        subject: "Test Stage - ${currentBuild.result}",
                        body: "The Test stage has completed with status: ${currentBuild.result}. Please review the attached test results.",
                        to: "${env.RECIPIENT_EMAIL}",
                        attachmentsPattern: 'test-results.log',
                        compressLog: true
                    )
                }
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    echo 'Running security scan...'
                    sh 'npm audit > audit-results.log || true' // Avoid failing the build
                    currentBuild.result = currentBuild.result ?: 'SUCCESS'
                }
            }
            post {
                always {
                    emailext(
                        subject: "Security Scan Stage - ${currentBuild.result}",
                        body: "The Security Scan stage has completed. Please check the attached audit results.",
                        to: "${env.RECIPIENT_EMAIL}",
                        attachmentsPattern: 'audit-results.log',
                        compressLog: true
                    )
                }
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deployment stage executed.'
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}
