pipeline {
    agent any

    environment {
        RECIPIENT = 'radia.zayeen@gmail.com'
    }

    stages {
        stage("Checkout") {
            steps {
                git branch: 'main', url: 'https://github.com/radia-zayeen/8.2CDevSecOp.git'
            }
        }

        stage("Install Dependencies") {
            steps {
                sh 'npm install'
            }
        }

        stage("Run Tests") {
            steps {
                script {
                    def testStatus = sh(script: 'npm test', returnStatus: true)
                    emailext(
                        to: "${env.RECIPIENT}",
                        subject: "Build Notification: Test Stage - ${testStatus == 0 ? 'SUCCESS' : 'FAILURE'}",
                        body: "The test stage has completed with status: ${testStatus == 0 ? 'SUCCESS' : 'FAILURE'}.\n\nCheck attached log for details.",
                        attachLog: true
                    )
                    if (testStatus != 0) {
                        currentBuild.result = 'UNSTABLE'
                    }
                }
            }
        }

        stage("Generate Coverage Report") {
            steps {
                sh 'npm run coverage || true'
            }
        }

        stage("NPM Audit (Security Scan)") {
            steps {
                script {
                    def auditStatus = sh(script: 'npm audit', returnStatus: true)
                    emailext(
                        to: "${env.RECIPIENT}",
                        subject: "Build Notification: Security Scan - ${auditStatus == 0 ? 'SUCCESS' : 'FAILURE'}",
                        body: "Security scan completed with status: ${auditStatus == 0 ? 'SUCCESS' : 'FAILURE'}.\n\nCheck attached log for details.",
                        attachLog: true
                    )
                    if (auditStatus != 0) {
                        currentBuild.result = 'UNSTABLE'
                    }
                }
            }
        }
    }

    post {
        success {
            emailext(
                to: "${env.RECIPIENT}",
                subject: "Pipeline Completed - SUCCESS",
                body: "The pipeline completed successfully.",
                attachLog: true
            )
        }
        unstable {
            emailext(
                to: "${env.RECIPIENT}",
                subject: "Pipeline Completed - UNSTABLE",
                body: "The pipeline completed, but one or more stages reported issues.\n\nCheck the attached log.",
                attachLog: true
            )
        }
        failure {
            emailext(
                to: "${env.RECIPIENT}",
                subject: "Pipeline Completed - FAILURE",
                body: "The pipeline failed. Please check Jenkins logs for details.",
                attachLog: true
            )
        }
    }
}

