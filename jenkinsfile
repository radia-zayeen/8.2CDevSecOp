pipeline {
    agent any

    environment {
        RECIPIENT_EMAIL = 'radia.zayeen@gmail.com'
    }


    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                git 'https://github.com/radia-zayeen/8.2CDevSecOp.git'
            }
        }

        stage('Build') {
            steps {
                echo 'Building the application...'
                sh 'npm install'
            }
        }

        stage('Test') {
            steps {
                script {
                    try {
                        echo 'Running tests...'
                        sh 'npm test'  // Example test command
                        currentBuild.result = 'SUCCESS'
                    } catch (err) {
                        currentBuild.result = 'FAILURE'
                        throw err
                    }
                }
            }
            post {
                always {
                    emailext(
                        subject: "Test Stage - ${currentBuild.result}",
                        body: "The Test stage has completed with status: ${currentBuild.result}.",
                        to: "${env.RECIPIENT_EMAIL}",
                        attachmentsPattern: '**/test-results.log',
                        compressLog: true
                    )
                }
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    try {
                        echo 'Running security scan (e.g., using npm audit)...'
                        sh 'npm audit > audit-results.log || true'
                        currentBuild.result = 'SUCCESS'
                    } catch (err) {
                        currentBuild.result = 'FAILURE'
                        throw err
                    }
                }
            }
            post {
                always {
                    emailext(
                        subject: "Security Scan Stage - ${currentBuild.result}",
                        body: "The Security Scan stage has completed with status: ${currentBuild.result}.",
                        to: "${env.RECIPIENT_EMAIL}",
                        attachmentsPattern: 'audit-results.log',
                        compressLog: true
                    )
                }
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deployment step - tool recommendation: Ansible, Docker, or Kubernetes'
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}
